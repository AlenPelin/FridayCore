<!-- 
  ACCOUNT RESET RULES 
  ==================================================================================
  By default it does not do anything, it requires following files to be created:
  
  1. /App_Config/Include/zzz.YourProjectName/YourProjectName.FridayCore.AccountResetRules.config
  
  <configuration xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:env="http://www.sitecore.net/xmlconfig/env/">
    <sitecore role:require="Standalone or ContentManagement">
      <FridayCore>
        <AccountResetRules env:require="Debug">          
          <Account name="sitecore\admin" password="b" />
        </AccountResetRules>
        <AccountResetRules env:require="!Debug">
          <Account name="sitecore\admin" />
        </AccountResetRules>
      </FridayCore>
    </sitecore> 
  </configuration>
  
  NOTE, this sample config uses out of box 'env' variable that is not very commonly known, but it is 
  a part of out of box configuration files (/App_Config/Environment/Sitecore.PipelineProfiling.config).
  It should be defined the same way as 'role' variable - in the web.config's <appSettings> section as
  follows:
  
  <add key="env:define" value="Debug" />
  
  P.S. It can be easily transformed via web.Debug.config and web.Release.config or similar files for 
  different environments.
-->

<configuration xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore role:require="Standalone or ContentManagement">
    <pipelines>
      <initialize>
        <processor type="FridayCore.Pipelines.Loader.ResetUserAccounts, FridayCore.AccountResetRules" />
      </initialize>
    </pipelines>
    <FridayCore>
      <AccountResetRules />
    </FridayCore>
  </sitecore>
</configuration>