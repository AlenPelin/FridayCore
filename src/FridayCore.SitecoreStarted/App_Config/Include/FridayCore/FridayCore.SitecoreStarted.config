<!-- 
  SITECORE STARTED 
  ===========================================================================================
  By default it only writes to the log file 'Sitecore is up and serving requests' after first 
  request is served. But it also offers the API to hook up to this event and use it for your
  custom code: 
  
  1. /App_Config/Include/zzz.YourProjectName/YourProjectName.YourFeatureName.config
  
  <configuration xmlns:role="http://www.sitecore.net/xmlconfig/role/">
    <sitecore>
      <events>
        <event name="sitecore:started">
          <handler type="YourProjectName.Events.SitecoreStarted, YourProjectName" method="DoSomethingImportant" />
        </event>
      </events>
    </sitecore>
  </configuration>
  
  2. Initialization.cs
  
  namespace YourProjectName.Events 
  {
    public class SitecoreStarted
    {
      public void DoSomethingImportant(object obj, EventArgs args)
      {
        // do smothing important
      }
    }
  }
-->

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore>
    <events>
      <event name="sitecore:started">
        <handler type="FridayCore.Events.SitecoreStarted, FridayCore.SitecoreStarted" method="LogMeasurements" 
                 patch:before="*"/>
      </event>
    </events>
    <pipelines>
      <httpRequestEnd>
        <processor type="FridayCore.Pipelines.HttpRequest.RaiseEventOnce, FridayCore.SitecoreStarted" 
                   patch:after="*"/>
      </httpRequestEnd>
    </pipelines>
  </sitecore>
</configuration>